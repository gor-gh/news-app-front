{"ast":null,"code":"var _jsxFileName = \"/home/gor/WebstormProjects/news-app/news-app-front/src/components/ContactForm/ContactForm.js\";\nimport React from 'react';\nimport './ContactForm.css';\nimport { isValidEmail } from \"../../helpers\";\nimport FormField from '../FormField/FormField';\n\nclass ContactForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      fields: {\n        name: '',\n        email: '',\n        message: ''\n      },\n      fieldErrors: {}\n    };\n\n    this.onInputChange = ({\n      name,\n      value,\n      error\n    }) => {\n      const data = Object.assign({}, this.state.fields);\n      const dataErrors = Object.assign({}, this.state.fieldErrors);\n      data[name] = value;\n      dataErrors[name] = error;\n      this.setState({\n        fields: data,\n        fieldErrors: dataErrors\n      });\n    };\n\n    this.validate = () => {\n      const data = this.state.fields;\n      const dataErrors = this.state.fieldErrors;\n      const errorMessages = Object.keys(dataErrors).filter(key => dataErrors[key]);\n      return !data.name || !data.email || !data.message;\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(FormField, {\n      name: \"name\",\n      onChange: this.onInputChange,\n      placeholder: \"Type your name...\",\n      validate: val => val ? false : \"Name is required\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(FormField, {\n      name: \"email\",\n      onChange: this.onInputChange,\n      placeholder: \"Type your email...\",\n      validate: val => isValidEmail(val) ? false : \"Email is invalid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(FormField, {\n      name: \"message\",\n      onChange: this.onInputChange,\n      placeholder: \"Type your email...\",\n      validate: val => val ? false : \"Email is invalid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Send\",\n      disabled: this.validate(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default ContactForm;","map":{"version":3,"sources":["/home/gor/WebstormProjects/news-app/news-app-front/src/components/ContactForm/ContactForm.js"],"names":["React","isValidEmail","FormField","ContactForm","Component","state","fields","name","email","message","fieldErrors","onInputChange","value","error","data","Object","assign","dataErrors","setState","validate","errorMessages","keys","filter","key","render","val"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,mBAAP;AACA,SAAQC,YAAR,QAA2B,eAA3B;AACA,OAAOC,SAAP,MAAsB,wBAAtB;;AAEA,MAAMC,WAAN,SAA0BH,KAAK,CAACI,SAAhC,CAAyC;AAAA;AAAA;AAAA,SACrCC,KADqC,GAC7B;AACJC,MAAAA,MAAM,EAAE;AACJC,QAAAA,IAAI,EAAE,EADF;AAEJC,QAAAA,KAAK,EAAE,EAFH;AAGJC,QAAAA,OAAO,EAAE;AAHL,OADJ;AAMJC,MAAAA,WAAW,EAAE;AANT,KAD6B;;AAAA,SASrCC,aATqC,GASrB,CAAC;AAACJ,MAAAA,IAAD;AAAOK,MAAAA,KAAP;AAAcC,MAAAA;AAAd,KAAD,KAA0B;AACtC,YAAMC,IAAI,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,KAAKX,KAAL,CAAWC,MAA7B,CAAb;AACA,YAAMW,UAAU,GAAGF,MAAM,CAACC,MAAP,CAAc,EAAd,EAAiB,KAAKX,KAAL,CAAWK,WAA5B,CAAnB;AAEAI,MAAAA,IAAI,CAACP,IAAD,CAAJ,GAAaK,KAAb;AACAK,MAAAA,UAAU,CAACV,IAAD,CAAV,GAAmBM,KAAnB;AAEA,WAAKK,QAAL,CAAc;AAACZ,QAAAA,MAAM,EAAEQ,IAAT;AAAeJ,QAAAA,WAAW,EAAEO;AAA5B,OAAd;AACH,KAjBoC;;AAAA,SAkBrCE,QAlBqC,GAkB1B,MAAM;AACb,YAAML,IAAI,GAAG,KAAKT,KAAL,CAAWC,MAAxB;AACA,YAAMW,UAAU,GAAG,KAAKZ,KAAL,CAAWK,WAA9B;AACA,YAAMU,aAAa,GAAGL,MAAM,CAACM,IAAP,CAAYJ,UAAZ,EAAwBK,MAAxB,CAA+BC,GAAG,IAAIN,UAAU,CAACM,GAAD,CAAhD,CAAtB;AACA,aAAO,CAACT,IAAI,CAACP,IAAN,IAAc,CAACO,IAAI,CAACN,KAApB,IAA6B,CAACM,IAAI,CAACL,OAA1C;AACH,KAvBoC;AAAA;;AAwBrCe,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,SAAD;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,QAAQ,EAAE,KAAKb,aAFnB;AAGI,MAAA,WAAW,EAAC,mBAHhB;AAII,MAAA,QAAQ,EAAGc,GAAD,IAAUA,GAAG,GAAG,KAAH,GAAW,kBAJtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAOI,oBAAC,SAAD;AACI,MAAA,IAAI,EAAC,OADT;AAEI,MAAA,QAAQ,EAAE,KAAKd,aAFnB;AAGI,MAAA,WAAW,EAAC,oBAHhB;AAII,MAAA,QAAQ,EAAGc,GAAD,IAAUxB,YAAY,CAACwB,GAAD,CAAZ,GAAoB,KAApB,GAA4B,kBAJpD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPJ,eAaI,oBAAC,SAAD;AACI,MAAA,IAAI,EAAC,SADT;AAEI,MAAA,QAAQ,EAAE,KAAKd,aAFnB;AAGI,MAAA,WAAW,EAAC,oBAHhB;AAII,MAAA,QAAQ,EAAGc,GAAD,IAAUA,GAAG,GAAG,KAAH,GAAW,kBAJtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbJ,eAmBI;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,KAAK,EAAC,MAA3B;AAAkC,MAAA,QAAQ,EAAE,KAAKN,QAAL,EAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAnBJ,CADJ;AAuBH;;AAhDoC;;AAmDzC,eAAehB,WAAf","sourcesContent":["import React from 'react';\nimport './ContactForm.css';\nimport {isValidEmail} from \"../../helpers\";\nimport FormField from '../FormField/FormField'\n\nclass ContactForm extends React.Component{\n    state = {\n        fields: {\n            name: '',\n            email: '',\n            message: ''\n        },\n        fieldErrors: {}\n    }\n    onInputChange = ({name, value, error}) => {\n        const data = Object.assign({}, this.state.fields);\n        const dataErrors = Object.assign({},this.state.fieldErrors);\n\n        data[name] = value;\n        dataErrors[name] = error;\n\n        this.setState({fields: data, fieldErrors: dataErrors});\n    }\n    validate = () => {\n        const data = this.state.fields;\n        const dataErrors = this.state.fieldErrors;\n        const errorMessages = Object.keys(dataErrors).filter(key => dataErrors[key]);\n        return !data.name || !data.email || !data.message;\n    }\n    render(){\n        return (\n            <div>\n                <FormField\n                    name='name'\n                    onChange={this.onInputChange}\n                    placeholder='Type your name...'\n                    validate={(val) => (val ? false : \"Name is required\")}\n                />\n                <FormField\n                    name='email'\n                    onChange={this.onInputChange}\n                    placeholder='Type your email...'\n                    validate={(val) => (isValidEmail(val) ? false : \"Email is invalid\")}\n                />\n                <FormField\n                    name='message'\n                    onChange={this.onInputChange}\n                    placeholder='Type your email...'\n                    validate={(val) => (val ? false : \"Email is invalid\")}\n                />\n                <input type=\"submit\" value=\"Send\" disabled={this.validate()}/>\n            </div>\n        )\n    }\n}\n\nexport default ContactForm;"]},"metadata":{},"sourceType":"module"}