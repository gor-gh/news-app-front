{"ast":null,"code":"var _jsxFileName = \"/home/gor/WebstormProjects/news-app/news-app-front/src/components/ContactForm/ContactForm.js\";\nimport React from 'react';\nimport './ContactForm.css';\nimport { isValidEmail } from \"../../helpers\";\nimport FormField from '../FormField/FormField';\n\nclass ContactForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      fields: {\n        name: '',\n        email: '',\n        message: ''\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(FormField, {\n      name: \"name\",\n      onChange: this.onInputChange,\n      placeholder: \"Type your name...\",\n      validate: val => val ? false : \"Name is required\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(FormField, {\n      name: \"email\",\n      onChange: this.onInputChange,\n      placeholder: \"Type your email...\",\n      validate: val => val ? isValidEmail(val) : \"Email is invalid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(FormField, {\n      name: \"message\",\n      onChange: this.onInputChange,\n      placeholder: \"Type your email...\",\n      validate: val => val ? isValidEmail(val) : \"Email is invalid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default ContactForm;","map":{"version":3,"sources":["/home/gor/WebstormProjects/news-app/news-app-front/src/components/ContactForm/ContactForm.js"],"names":["React","isValidEmail","FormField","ContactForm","Component","state","fields","name","email","message","render","onInputChange","val"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,mBAAP;AACA,SAAQC,YAAR,QAA2B,eAA3B;AACA,OAAOC,SAAP,MAAsB,wBAAtB;;AAEA,MAAMC,WAAN,SAA0BH,KAAK,CAACI,SAAhC,CAAyC;AAAA;AAAA;AAAA,SACrCC,KADqC,GAC7B;AACJC,MAAAA,MAAM,EAAE;AACJC,QAAAA,IAAI,EAAE,EADF;AAEJC,QAAAA,KAAK,EAAE,EAFH;AAGJC,QAAAA,OAAO,EAAE;AAHL;AADJ,KAD6B;AAAA;;AAQrCC,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,SAAD;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,QAAQ,EAAE,KAAKC,aAFnB;AAGI,MAAA,WAAW,EAAC,mBAHhB;AAII,MAAA,QAAQ,EAAGC,GAAD,IAAUA,GAAG,GAAG,KAAH,GAAW,kBAJtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAOI,oBAAC,SAAD;AACI,MAAA,IAAI,EAAC,OADT;AAEI,MAAA,QAAQ,EAAE,KAAKD,aAFnB;AAGI,MAAA,WAAW,EAAC,oBAHhB;AAII,MAAA,QAAQ,EAAGC,GAAD,IAAUA,GAAG,GAAGX,YAAY,CAACW,GAAD,CAAf,GAAuB,kBAJlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPJ,eAaI,oBAAC,SAAD;AACI,MAAA,IAAI,EAAC,SADT;AAEI,MAAA,QAAQ,EAAE,KAAKD,aAFnB;AAGI,MAAA,WAAW,EAAC,oBAHhB;AAII,MAAA,QAAQ,EAAGC,GAAD,IAAUA,GAAG,GAAGX,YAAY,CAACW,GAAD,CAAf,GAAuB,kBAJlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbJ,CADJ;AAsBH;;AA/BoC;;AAkCzC,eAAeT,WAAf","sourcesContent":["import React from 'react';\nimport './ContactForm.css';\nimport {isValidEmail} from \"../../helpers\";\nimport FormField from '../FormField/FormField'\n\nclass ContactForm extends React.Component{\n    state = {\n        fields: {\n            name: '',\n            email: '',\n            message: ''\n        }\n    }\n    render(){\n        return (\n            <div>\n                <FormField\n                    name='name'\n                    onChange={this.onInputChange}\n                    placeholder='Type your name...'\n                    validate={(val) => (val ? false : \"Name is required\")}\n                />\n                <FormField\n                    name='email'\n                    onChange={this.onInputChange}\n                    placeholder='Type your email...'\n                    validate={(val) => (val ? isValidEmail(val) : \"Email is invalid\")}\n                />\n                <FormField\n                    name='message'\n                    onChange={this.onInputChange}\n                    placeholder='Type your email...'\n                    validate={(val) => (val ? isValidEmail(val) : \"Email is invalid\")}\n                />\n            </div>\n        )\n    }\n}\n\nexport default ContactForm;"]},"metadata":{},"sourceType":"module"}