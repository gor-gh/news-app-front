{"ast":null,"code":"const LOCAL_STORAGE_KEY = 'my_key_for_tokens';\n\nclass Client {\n  constructor() {\n    this.isLoggedIn = () => !!this.token;\n\n    this.login = data => {\n      const dataString = JSON.stringify(data);\n      fetch('/users/login', {\n        method: 'POST',\n        body: dataString\n      }).then(this.checkStatus).then(res => res.json()).then(json => this.setToken(json.token));\n    };\n\n    this.checkStatus = response => {\n      if (response.status >= 200 && response.status < 300) {\n        return response;\n      } else {\n        const error = new Error(`HTTP Error ${response.statusText}`);\n        error.status = response.statusText;\n        error.response = response;\n        console.log(error);\n        throw error;\n      }\n    };\n\n    this.localeStorageIsEnabled = typeof localStorage !== 'undefined';\n\n    if (this.localeStorageIsEnabled) {\n      this.token = localStorage.getItem(LOCAL_STORAGE_KEY);\n\n      if (!this.token) {\n        this.token = sessionStorage.getItem(LOCAL_STORAGE_KEY);\n      }\n    }\n  }\n\n}\n\nexport const client = new Client();","map":{"version":3,"sources":["/home/gor/WebstormProjects/news-app/news-app-front/src/Client.js"],"names":["LOCAL_STORAGE_KEY","Client","constructor","isLoggedIn","token","login","data","dataString","JSON","stringify","fetch","method","body","then","checkStatus","res","json","setToken","response","status","error","Error","statusText","console","log","localeStorageIsEnabled","localStorage","getItem","sessionStorage","client"],"mappings":"AAAA,MAAMA,iBAAiB,GAAG,mBAA1B;;AAGA,MAAMC,MAAN,CAAY;AACRC,EAAAA,WAAW,GAAE;AAAA,SASbC,UATa,GASA,MAAM,CAAC,CAAC,KAAKC,KATb;;AAAA,SAUbC,KAVa,GAUJC,IAAD,IAAU;AACd,YAAMC,UAAU,GAAGC,IAAI,CAACC,SAAL,CAAeH,IAAf,CAAnB;AACAI,MAAAA,KAAK,CAAC,cAAD,EAAgB;AACjBC,QAAAA,MAAM,EAAE,MADS;AAEjBC,QAAAA,IAAI,EAAEL;AAFW,OAAhB,CAAL,CAIKM,IAJL,CAIU,KAAKC,WAJf,EAKKD,IALL,CAKUE,GAAG,IAAIA,GAAG,CAACC,IAAJ,EALjB,EAMKH,IANL,CAMUG,IAAI,IAAI,KAAKC,QAAL,CAAcD,IAAI,CAACZ,KAAnB,CANlB;AAOH,KAnBY;;AAAA,SAoBbU,WApBa,GAoBEI,QAAD,IAAc;AACxB,UAAIA,QAAQ,CAACC,MAAT,IAAmB,GAAnB,IAA0BD,QAAQ,CAACC,MAAT,GAAkB,GAAhD,EAAqD;AACjD,eAAOD,QAAP;AACH,OAFD,MAEO;AACH,cAAME,KAAK,GAAG,IAAIC,KAAJ,CAAW,cAAaH,QAAQ,CAACI,UAAW,EAA5C,CAAd;AACAF,QAAAA,KAAK,CAACD,MAAN,GAAeD,QAAQ,CAACI,UAAxB;AACAF,QAAAA,KAAK,CAACF,QAAN,GAAiBA,QAAjB;AACAK,QAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AACA,cAAMA,KAAN;AACH;AACJ,KA9BY;;AACT,SAAKK,sBAAL,GAA+B,OAAOC,YAAP,KAAwB,WAAvD;;AACA,QAAG,KAAKD,sBAAR,EAA+B;AAC3B,WAAKrB,KAAL,GAAasB,YAAY,CAACC,OAAb,CAAqB3B,iBAArB,CAAb;;AACA,UAAG,CAAC,KAAKI,KAAT,EAAgB;AACZ,aAAKA,KAAL,GAAawB,cAAc,CAACD,OAAf,CAAuB3B,iBAAvB,CAAb;AACH;AACJ;AACJ;;AATO;;AAkCZ,OAAO,MAAM6B,MAAM,GAAG,IAAI5B,MAAJ,EAAf","sourcesContent":["const LOCAL_STORAGE_KEY = 'my_key_for_tokens';\n\n\nclass Client{\n    constructor(){\n        this.localeStorageIsEnabled = (typeof localStorage !== 'undefined');\n        if(this.localeStorageIsEnabled){\n            this.token = localStorage.getItem(LOCAL_STORAGE_KEY)\n            if(!this.token) {\n                this.token = sessionStorage.getItem(LOCAL_STORAGE_KEY);\n            }\n        }\n    }\n    isLoggedIn = () => !!this.token;\n    login = (data) => {\n        const dataString = JSON.stringify(data);\n        fetch('/users/login',{\n            method: 'POST',\n            body: dataString\n        })\n            .then(this.checkStatus)\n            .then(res => res.json())\n            .then(json => this.setToken(json.token))\n    }\n    checkStatus = (response) => {\n        if (response.status >= 200 && response.status < 300) {\n            return response;\n        } else {\n            const error = new Error(`HTTP Error ${response.statusText}`);\n            error.status = response.statusText;\n            error.response = response;\n            console.log(error);\n            throw error;\n        }\n    }\n}\n\nexport const client = new Client();"]},"metadata":{},"sourceType":"module"}