{"ast":null,"code":"var _jsxFileName = \"/home/gor/WebstormProjects/news-app/news-app-front/src/components/ContactForm/ContactForm.js\";\nimport React from 'react';\nimport './ContactForm.css';\nimport { isValidEmail } from \"../../helpers\";\nimport FormField from '../FormField/FormField';\n\nclass ContactForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      _isLoading: false,\n      fields: {\n        name: '',\n        email: '',\n        message: ''\n      },\n      fieldErrors: {}\n    };\n\n    this.onFormSubmit = e => {\n      e.preventDefault();\n      const randTime = Math.floor(Math.random() * 1001) + 1000;\n      this.setState({\n        _isLoading: true\n      }, () => {\n        setTimeout(() => {}, randTime);\n      });\n    };\n\n    this.onInputChange = ({\n      name,\n      value,\n      error\n    }) => {\n      const data = Object.assign({}, this.state.fields);\n      const dataErrors = Object.assign({}, this.state.fieldErrors);\n      data[name] = value;\n      dataErrors[name] = error;\n      this.setState({\n        fields: data,\n        fieldErrors: dataErrors\n      });\n    };\n\n    this.validate = () => {\n      const data = this.state.fields;\n      const dataErrors = this.state.fieldErrors;\n      const errorMessages = Object.keys(dataErrors).filter(key => dataErrors[key]);\n      return !data.name || !data.email || !data.message || errorMessages.length;\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.onFormSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormField, {\n      name: \"name\",\n      onChange: this.onInputChange,\n      placeholder: \"Type your name...\",\n      validate: val => val ? false : \"Name is required\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(FormField, {\n      name: \"email\",\n      onChange: this.onInputChange,\n      placeholder: \"Type your email...\",\n      validate: val => isValidEmail(val) ? false : \"Email is invalid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(FormField, {\n      name: \"message\",\n      onChange: this.onInputChange,\n      placeholder: \"Type your email...\",\n      validate: val => val ? false : \"Email is invalid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Send\",\n      disabled: this.validate(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\nexport default ContactForm;","map":{"version":3,"sources":["/home/gor/WebstormProjects/news-app/news-app-front/src/components/ContactForm/ContactForm.js"],"names":["React","isValidEmail","FormField","ContactForm","Component","state","_isLoading","fields","name","email","message","fieldErrors","onFormSubmit","e","preventDefault","randTime","Math","floor","random","setState","setTimeout","onInputChange","value","error","data","Object","assign","dataErrors","validate","errorMessages","keys","filter","key","length","render","val"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './ContactForm.css';\nimport {isValidEmail} from \"../../helpers\";\nimport FormField from '../FormField/FormField'\n\nclass ContactForm extends React.Component{\n    state = {\n        _isLoading: false,\n        fields: {\n            name: '',\n            email: '',\n            message: ''\n        },\n        fieldErrors: {}\n    }\n    onFormSubmit = (e) => {\n        e.preventDefault();\n        const randTime = Math.floor((Math.random() * 1001)) + 1000;\n        this.setState({_isLoading: true},() => {\n            setTimeout(() => {\n\n            },randTime);\n        })\n    }\n    onInputChange = ({name, value, error}) => {\n        const data = Object.assign({}, this.state.fields);\n        const dataErrors = Object.assign({},this.state.fieldErrors);\n\n        data[name] = value;\n        dataErrors[name] = error;\n\n        this.setState({fields: data, fieldErrors: dataErrors});\n    }\n    validate = () => {\n        const data = this.state.fields;\n        const dataErrors = this.state.fieldErrors;\n        const errorMessages = Object.keys(dataErrors).filter(key => dataErrors[key]);\n        return !data.name || !data.email || !data.message || errorMessages.length;\n    }\n    render(){\n        return (\n            <div>\n                <form onSubmit={this.onFormSubmit}>\n                    <FormField\n                        name='name'\n                        onChange={this.onInputChange}\n                        placeholder='Type your name...'\n                        validate={(val) => (val ? false : \"Name is required\")}\n                    />\n                    <FormField\n                        name='email'\n                        onChange={this.onInputChange}\n                        placeholder='Type your email...'\n                        validate={(val) => (isValidEmail(val) ? false : \"Email is invalid\")}\n                    />\n                    <FormField\n                        name='message'\n                        onChange={this.onInputChange}\n                        placeholder='Type your email...'\n                        validate={(val) => (val ? false : \"Email is invalid\")}\n                    />\n                    <input type=\"submit\" value=\"Send\" disabled={this.validate()}/>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default ContactForm;"]},"metadata":{},"sourceType":"module"}