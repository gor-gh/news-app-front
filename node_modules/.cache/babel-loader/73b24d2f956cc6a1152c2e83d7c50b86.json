{"ast":null,"code":"import _classCallCheck from\"/home/gor/WebstormProjects/news-app/news-app-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/gor/WebstormProjects/news-app/news-app-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";var LOCAL_STORAGE_KEY='my_key_for_tokens';var Client=/*#__PURE__*/function(){function Client(){_classCallCheck(this,Client);this.localeStorageIsEnabled=typeof localStorage!=='undefined';if(this.localeStorageIsEnabled){this.token=localStorage.getItem(LOCAL_STORAGE_KEY);if(!this.token){this.token=sessionStorage.getItem(LOCAL_STORAGE_KEY);}}}_createClass(Client,[{key:\"isLoggedIn\",value:function isLoggedIn(){return!!this.token;}},{key:\"getNewses\",value:function getNewses(successCallback){return fetch('https://serene-hamlet-84320.herokuapp.com/api/news',{headers:{token:this.token}}).then(this.checkStatus).then(function(res){return res.json();}).then(successCallback).catch(function(err){console.log(err);});}},{key:\"login\",value:function login(data,rememberMe){var _this=this;var dataString=JSON.stringify(data);return fetch('https://serene-hamlet-84320.herokuapp.com/users/login',{method:'POST',body:dataString,headers:{\"Content-Type\":\"application/json\"}}).then(this.checkStatus).then(function(res){return res.json();}).then(function(json){return _this.setToken(json.token,rememberMe);});}},{key:\"logout\",value:function logout(){var _this2=this;return fetch('https://serene-hamlet-84320.herokuapp.com/users/logout',{headers:{token:this.token}}).then(this.checkStatus).then(function(res){return res.json();}).catch(function(err){console.log(err);}).then(function(){_this2.removeToken();});}},{key:\"setToken\",value:function setToken(token,rememberMe){this.token=token;if(this.localeStorageIsEnabled){if(rememberMe){localStorage.setItem(LOCAL_STORAGE_KEY,this.token);}else{sessionStorage.setItem(LOCAL_STORAGE_KEY,this.token);}}}},{key:\"removeToken\",value:function removeToken(){this.token=null;if(this.localeStorageIsEnabled){localStorage.removeItem(LOCAL_STORAGE_KEY);sessionStorage.removeItem(LOCAL_STORAGE_KEY);}}},{key:\"checkStatus\",value:function checkStatus(response){if(response.status>=200&&response.status<300){return response;}else{var error=new Error(\"HTTP Error \".concat(response.statusText));error.status=response.statusText;error.response=response;throw error;}}}]);return Client;}();export var client=new Client();","map":{"version":3,"sources":["/home/gor/WebstormProjects/news-app/news-app-front/src/Client.js"],"names":["LOCAL_STORAGE_KEY","Client","localeStorageIsEnabled","localStorage","token","getItem","sessionStorage","successCallback","fetch","headers","then","checkStatus","res","json","catch","err","console","log","data","rememberMe","dataString","JSON","stringify","method","body","setToken","removeToken","setItem","removeItem","response","status","error","Error","statusText","client"],"mappings":"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","sourcesContent":["const LOCAL_STORAGE_KEY = 'my_key_for_tokens';\n\n\nclass Client{\n    constructor(){\n        this.localeStorageIsEnabled = (typeof localStorage !== 'undefined');\n        if(this.localeStorageIsEnabled){\n            this.token = localStorage.getItem(LOCAL_STORAGE_KEY)\n            if(!this.token) {\n                this.token = sessionStorage.getItem(LOCAL_STORAGE_KEY);\n            }\n        }\n    }\n    isLoggedIn() {\n      return !!this.token;\n    }\n    getNewses(successCallback){\n        return fetch('https://serene-hamlet-84320.herokuapp.com/api/news',{\n            headers: {\n                token: this.token\n            }\n        })\n            .then(this.checkStatus)\n            .then(res => res.json())\n            .then(successCallback)\n            .catch(err => {\n                console.log(err)\n            })\n    }\n    login(data, rememberMe){\n        const dataString = JSON.stringify(data);\n        return fetch('https://serene-hamlet-84320.herokuapp.com/users/login',{\n            method: 'POST',\n            body: dataString,\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        })\n            .then(this.checkStatus)\n            .then(res => res.json())\n            .then(json => this.setToken(json.token,rememberMe))\n    }\n    logout(){\n\n        return fetch('https://serene-hamlet-84320.herokuapp.com/users/logout',{\n            headers: {\n                token: this.token\n            }\n        })\n            .then(this.checkStatus)\n            .then(res => res.json())\n            .catch(err => {\n                console.log(err);\n            })\n            .then(() => {\n                this.removeToken();\n            })\n\n    }\n    setToken(token, rememberMe) {\n        this.token = token;\n\n        if(this.localeStorageIsEnabled){\n            if(rememberMe){\n                localStorage.setItem(LOCAL_STORAGE_KEY,this.token);\n            } else {\n                sessionStorage.setItem(LOCAL_STORAGE_KEY,this.token);\n            }\n        }\n    }\n    removeToken(){\n        this.token = null;\n        if(this.localeStorageIsEnabled){\n            localStorage.removeItem(LOCAL_STORAGE_KEY);\n            sessionStorage.removeItem(LOCAL_STORAGE_KEY);\n        }\n    }\n    checkStatus (response) {\n        if (response.status >= 200 && response.status < 300) {\n            return response;\n        } else {\n            const error = new Error(`HTTP Error ${response.statusText}`);\n            error.status = response.statusText;\n            error.response = response;\n            throw error;\n        }\n    }\n}\n\nexport const client = new Client();"]},"metadata":{},"sourceType":"module"}